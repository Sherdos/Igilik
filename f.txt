Movies:
id,
title,
description,
file,
category,

{
    create table catergories (id serial primary key, title varchar, description text, file varchar, category integer references catergories(id));
}
{
    insert into movies (title,description,file,category)values('spider-man','posdfmpsmfdm', 'movies/spider-man.mvp',3),('смерть','posdfmpsmfdm', 'movies/смерть.mvp',1),('Любовь','posdfmpsmfdm', 'movies/Любовь.mvp',2);
}

Categories:
id,
name,
slug

{
    create table catergories (id serial primary key, name varchar, slug varchar unique);
}

{
    insert into catergories(name,slug) values ('боевик','Boivik'),('Драмма','Dramma'),('Мультфильм','Multfilm');
}

Users:
id,
username,

{
    create table users (id serial primary key, username varchar unique);
}

{
    insert into users(username) values ('sherdos'),('Ali'),('Bektur');
}


Favorites:
id,
userid,
movieid

{
    create table favorites (id serial primary key, userid integer references users(id), movieid integer references movies(id));
}

{
    insert into favorites (userid,movieid)values(1,3),(2,1),(3,2),(1,1);
}

Grade_movie:
id,
grade_user,
userid,
movieid,

{
    create table grade_movie (id serial primary key, grade_user integer, userid integer references users(id), movieid integer references movies(id));
}

{
    insert into grade_movie (grade_user, userid,movieid)values(9,1,3),(7,2,1),(5,3,2),(5,1,1);
}


{
    select m.title, (select avg(g.grade_user) from  grade_movie as g where g.movieid=m.id ) as 'Рейтинг' from movies as m;
}


1 Как назвать задание?
2 Укажите адреса?
3 Когда нужно приступить к работе?
4 Уточните детали?
5 На какой бюджет вы рассчитываете?
6 Осталось войти, чтобы получать отклики ?
7 Какие услуги понадобятся?
8 По какому адресу?
